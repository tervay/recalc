import { generateIOTests } from "../support/e2e";

const inputs = { {% for input_name in inputs.keys() %}
    {{ input_name }}: "{{ input_name }}",{% endfor %}
};

const inputSelects = { {% for input_name in input_selects.keys() %}
    {{ input_name }}: "select{{ input_name }}",{% endfor %}
};

const secondaryInputs = {};

const outputs = { {% for input_name in outputs.keys() %}
    {{ input_name }}: "{{ input_name }}",{% endfor %}
};

const outputSelects = { {% for input_name in output_selects.keys() %}
    {{ input_name }}: "select{{ input_name }}",{% endfor %}
};

const allSelects = { ...inputSelects, ...outputSelects };

describe("{{ calculator_name }} e2e tests", () => {
  beforeEach(() => {
    cy.visit("localhost:3000/{{ endpoint }}", {
      onBeforeLoad(win) {
        cy.spy(win.navigator.clipboard, "writeText").as("copy");
      },
    });
  });

  it("has a visible title", () => {
    cy.get("p")
      .first()
      .should("be.visible")
      .should("have.text", "{{ calculator_name }}");
  });

  it("copy link button works", () => {
    cy.contains("Copy Link", { timeout: 1000 * 60 })
      .should("be.visible")
      .click();
    cy.get("@copy").should(
      "have.been.calledWithExactly",
      "FIXME"
    );
  });

  generateIOTests<
    typeof inputs,
    typeof outputs,
    typeof allSelects,
    typeof secondaryInputs
  >(
    { name: "Belt Calculator", url: "localhost:3000/{{ endpoint }}" },
    inputs,
    outputs,
    allSelects,
    {{ cases }},
    secondaryInputs
  );
});

export default {};

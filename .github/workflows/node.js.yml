name: Node CI

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]

jobs:
  install:
    runs-on: ubuntu-latest
    container: cypress/included:10.11.0
    environment: recalc-prod

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - run: yarn install

      - run: yarn build

      - name: Run tests
        env:
          VITE_KEYPHRASE: ${{ secrets.VITE_KEYPHRASE }}
        run: yarn test --coverage

      - name: Post coverage report
        if: ${{ !env.ACT }}
        uses: romeovs/lcov-reporter-action@v0.2.21
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GH_PAT }}

      - name: Cypress e2e tests
        uses: cypress-io/github-action@v4.2.0
        with:
          install: false
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 60
          record: false
          spec: cypress/e2e/*
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          VITE_KEYPHRASE: ${{ secrets.VITE_KEYPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Cypress component tests
        uses: cypress-io/github-action@v4.2.0
        with:
          install: false
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 60
          record: false
          component: true
          spec: cypress/component/*
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          VITE_KEYPHRASE: ${{ secrets.VITE_KEYPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: "Vercel dev deploy"
        uses: amondnet/vercel-action@v20 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          # vercel-args: "--prod" #Optional
          vercel-org-id: ${{ secrets.ORG_ID}} #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required
